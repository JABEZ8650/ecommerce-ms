basePath: /api
definitions:
  domain.Order:
    properties:
      created_at:
        type: integer
      customer_id:
        type: string
      id:
        type: string
      product_id:
        type: string
      quantity:
        minimum: 1
        type: integer
      status:
        enum:
        - pending
        - confirmed
        - shipped
        - delivered
        type: string
      updated_at:
        type: integer
    required:
    - customer_id
    - product_id
    - quantity
    - status
    type: object
host: localhost:8083
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: Order microservice using Go, MongoDB, Chi, Swagger
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: Order Microservice API
  version: "1.0"
paths:
  /orders:
    get:
      description: Retrieve a list of all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Order'
            type: array
        "500":
          description: Internal error
          schema:
            type: string
      summary: Get all orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new order and store it in the database
      parameters:
      - description: Order to create
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/domain.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Create a new order
      tags:
      - orders
  /orders/{id}:
    delete:
      description: Delete an order by its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "404":
          description: Order not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Delete an order
      tags:
      - orders
    get:
      description: Retrieve a single order using its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Order'
        "404":
          description: Order not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Get an order by ID
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: Update an order by its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/domain.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Order not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Update an order
      tags:
      - orders
schemes:
- http
swagger: "2.0"
